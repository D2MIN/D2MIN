#include <iostream>
using namespace std;

//12 10 16 9 11 15 17 8 14 13 7 6 0
//12 10 16 9 11 15 17 14 13  0

struct Tree {
	int info;
	Tree* left;
	Tree* right;
};

int create_tree(Tree* root,int data) {
	if (root->info > data) {
		if (root->left == NULL) {
			Tree* r = new Tree;
			r->info = data;
			r->left = NULL;
			r->right = NULL;
			root->left = r;
		}
		else {
			return create_tree(root->left, data);
		}
	}
	else {
		if (root->right == NULL) {
			Tree* r = new Tree;
			r->info = data;
			r->left = NULL;
			r->right = NULL;
			root->right = r;
		}
		else {
			return create_tree(root->right, data);
		}
	}
}

void delete_tree(Tree* root) {
	if (root != NULL) {
		delete_tree(root->left);
		delete_tree(root->right);
		delete root;
	}
}

void print_tree(Tree* root) {
	if (root != NULL) {
		print_tree(root->left);
		print_tree(root->right);
		cout << root->info << " ";
	}
}

int coll_v(Tree* root) {
	if (root == NULL) 
		return 0;
	return max(coll_v(root->left) +1 , coll_v(root->right) +1);
}

int main() {
	Tree* root = new Tree;
	int x; cin >> x;
	root->info = x; root->left = NULL; root->right = NULL;
	cin >> x;
	while (x != 0) {
		create_tree(root, x);
		cin >> x;
	}

	print_tree(root);
	cout << endl << coll_v(root)-1;
	delete_tree(root);
}
